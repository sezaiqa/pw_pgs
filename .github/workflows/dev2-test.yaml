name: Test the Payment Gateways 

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the PG'
        required: true
        default: 'Moyasar'
        type: choice
        options:
          - Moyasar
          - Tyro
          - Tuna
          - Checkout
          - Adyen
          - Ngenius
      env:
        description: 'Choose the Environment'
        required: true
        default: 'dev2'
        type: choice
        options:
          - dev2
          - dev5
      browser:
        description: 'Choose the Browser'
        required: true
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        shard: [1/2, 2/2]
      fail-fast: false
      max_attempts: 2  # Retry failed jobs up to 2 times

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers and dependencies
        run: npx playwright install --with-deps

      - name: Set test folder and browser based on inputs
        run: |
          # Set test folder based on the chosen environment and PG
          case ${{ github.event.inputs.environment }} in
            Moyasar) pg_folder="Moyasar";;
            Tyro) pg_folder="Tyro";;
            Tuna) pg_folder="Tuna";;
            Checkout) pg_folder="Checkout";;
            Adyen) pg_folder="Adyen";;
            Ngenius) pg_folder="Ngenius";;
            *) echo "Invalid PG environment" && exit 1;;
          esac

          case ${{ github.event.inputs.env }} in
            dev2) env_folder="dev2";;
            dev5) env_folder="dev5";;
            *) echo "Invalid environment" && exit 1;;
          esac

          test_folder="tests/${env_folder}${pg_folder}"
          echo "TEST_FOLDER=$test_folder" >> $GITHUB_ENV

          # Set the browser based on user input
          case ${{ github.event.inputs.browser }} in
            chromium) browser="chromium";;
            firefox) browser="firefox";;
            webkit) browser="webkit";;
            *) echo "Invalid browser" && exit 1;;
          esac
          echo "BROWSER=$browser" >> $GITHUB_ENV

      - name: Run Playwright tests for shard ${{ matrix.shard }}
        run: |
          echo "Running shard ${{ matrix.shard }} with test folder $TEST_FOLDER on browser $BROWSER"
          npx playwright test $TEST_FOLDER --project=$BROWSER --shard=${{ matrix.shard }}

      - name: Send Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Playwright tests have been triggered for *${{ github.event.inputs.env }}* with *${{ github.event.inputs.environment }}* on browser *${{ github.event.inputs.browser }}*.",
            "attachments": [
              {
                "color": "#36a64f",
                "fields": [
                  {
                    "title": "Environment",
                    "value": "${{ github.event.inputs.env }}",
                    "short": true
                  },
                  {
                    "title": "Payment Gateway",
                    "value": "${{ github.event.inputs.environment }}",
                    "short": true
                  },
                  {
                    "title": "Browser",
                    "value": "${{ github.event.inputs.browser }}",
                    "short": true
                  }
                ],
                "footer": "GitHub Actions | Workflow Run ID: ${{ github.run_id }}",
                "ts": '"$(date +%s)"'
              }
            ]
          }' ${{ secrets.SLACK_WEBHOOK_URL }}
